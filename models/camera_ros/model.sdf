<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="camera_ros">
    <!-- The origin is the center of the bottom -->
    <pose>0 0 0.05 0 0 0</pose>
    <link name="camera_link">
      <audio_sink /> <!-- Camera and microphone should be combined -->
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.000166667</ixx>
          <iyy>0.000166667</iyy>
          <izz>0.000166667</izz>
        </inertia>
      </inertial>
      <collision name="collision-box">
        <pose>-0.01 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.08 0.1 0.1</size>
          </box>
        </geometry>
      </collision>
      <collision name="collision-lens">
        <pose>0.04 0 0 0 1.57 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.02</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual-box">
        <pose>-0.01 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.08 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0.3 0.3 0.3 1</ambient>
          <diffuse>0.7 0.7 0.7 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
          <emissive>0 0 0 0</emissive>
        </material>
      </visual>
      <visual name="visual-lens">
        <pose>0.04 0 0 0 1.57 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.02</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
          <emissive>0 0 0 0</emissive>
        </material>
      </visual>
<!-- RGB CAMERA --> 
      <sensor type="camera" name="camera">
        <update_rate>20</update_rate>
        <visualize>false</visualize>
        <camera name="camera">
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera/rgb</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
<!-- THERMAL CAMERA --> 
      <sensor type="camera" name="thermal_camera_sensor">
        <update_rate>10</update_rate>
        <camera name="camera_ros_thermal">
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>160</width>
            <height>120</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
<!--
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
-->
        </camera>
        <plugin name="thermal_camera_controller" 
                filename="libgazebo_ros_thermal_camera_pink.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>camera/thermal/image_raw</imageTopicName>
          <cameraInfoTopicName>camera/thermal/camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
<!-- Before ROS-Melodic, below was accepted by gazebo_ros_spawn
          <interface:camera name="thermal_camera_iface" />
-->
        </plugin>
      </sensor> 
    </link>
<!-- original code of gazebo
      <sensor name="camera" type="camera">
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>false</visualize>
      </sensor>
-->
  </model>
</sdf>
